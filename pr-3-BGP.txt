Q.3 

#1. Implementing BGP path manipulation

Step:1 Cable the network as shown in the topology
    - Take 3 routers and align them triangally
    - R1 left bottom R2 top middle R3 right bottom 
    - connect eachother with the copper-straight Cable

        []
    []      []

step2: configure basic settings for each routers
#For Router0
=> Router0(config)# no ip domain lookup
=> Router0(config)# hostname R1
=> R1(config)# line con 0
=> R1(config-line)# exec-timeout 0 0
=> R1(config-line)# logging synchronous
=> R1(config)# banner motd # This is R1, BGP Path Manipulation Lab #
=> R1(config)# ipv6 unicast-routing
=> R1(config)# interface FastEthernet0/0
=> R1(config-if)# ip address 10.1.2.1 255.255.255.0
=> R1(config-if)# ipv6 address fe80::1:1 link-local
=> R1(config-if)# ipv6 address 2001:db8:acad:1012::1/64
=> R1(config-if)# no shutdown
=> R1(config)# interface s6/0
=> R1(config-if)# ip address 10.1.3.1 255.255.255.128
=> R1(config-if)# ipv6 address fe80::1:2 link-local
=> R1(config-if)# ipv6 address 2001:db8:acad:1013::1/64
=> R1(config-if)# no shutdown
=> R1(config)# interface s6/1
=> R1(config-if)# ip address 10.1.3.129 255.255.255.128
=> R1(config-if)# ipv6 address fe80::1:3 link-local
=> R1(config-if)# ipv6 address 2001:db8:acad:1014::1/64
=> R1(config-if)# no shutdown
=> R1(config)# interface loopback 0
=> R1(config-if)# ip address 192.168.1.1 255.255.255.224
=> R1(config-if)# ipv6 address fe80::1:4 link-local
=> R1(config-if)# ipv6 address 2001:db8:acad:1000::1/64
=> R1(config-if)# no shutdown
=> R1(config)# interface loopback 1
=> R1(config-if)# ip address 192.168.1.65 255.255.255.192
=> R1(config-if)# ipv6 address fe80::1:5 link-local
=> R1(config-if)# ipv6 address 2001:db8:acad:1001::1/64
=> R1(config-if)# no shutdown


#For router 1
=> Router1(config)# no ip domain lookup
=> Router1(config)# hostname R2
=> R2(config)# line con 0
=> R2(config-line)# exec-timeout 0 0
=> R2(config-line)# logging synchronous
=> R2(config)# banner motd # This is R2, BGP Path Manipulation Lab #
=> R2(config)# ipv6 unicast-routing
=> R2(config)# interface FastEthernet0/0
=> R2(config-if)# ip address 10.1.2.2 255.255.255.0
=> R2(config-if)# ipv6 address fe80::2:1 link-local
=> R2(config-if)# ipv6 address 2001:db8:acad:1012::2/64
=> R2(config-if)# no shutdown
=> R2(config)# interface FastEthernet0/1
=> R2(config-if)# ip address 10.2.3.2 255.255.255.0
=> R2(config-if)# ipv6 address fe80::2:2 link-local
=> R2(config-if)# ipv6 address 2001:db8:acad:1023::2/64
=> R2(config-if)# no shutdown
=> R2(config)# interface loopback 0
=> R2(config-if)# ip address 192.168.2.1 255.255.255.224
=> R2(config-if)# ipv6 address fe80::2:3 link-local
=> R2(config-if)# ipv6 address 2001:db8:acad:2000::1/64
=> R2(config-if)# no shutdown
=> R2(config)# interface loopback 1
=> R2(config-if)# ip address 192.168.2.65 255.255.255.192
=> R2(config-if)# ipv6 address fe80::2:4 link-local
=> R2(config-if)# ipv6 address 2001:db8:acad:2001::1/64
=> R2(config-if)# no shutdown

#For Router 2

=> Router2(config)# no ip domain lookup
=> Router2(config)# hostname R3
=> R3(config)# line con 0
=> R3(config-line)# exec-timeout 0 0
=> R3(config-line)# logging synchronous
=> R3(config)# banner motd # This is R3, BGP Path Manipulation Lab #
=> R3(config)# ipv6 unicast-routing
=> R3(config)# interface FastEthernet0/1
=> R3(config-if)# ip address 10.2.3.3 255.255.255.0
=> R3(config-if)# ipv6 address fe80::3:1 link-local
=> R3(config-if)# ipv6 address 2001:db8:acad:1023::3/64
=> R3(config-if)# no shutdown
=> R3(config)# interface s6/0
=> R3(config-if)# ip address 10.1.3.3 255.255.255.128
=> R3(config-if)# ipv6 address fe80::3:2 link-local
=> R3(config-if)# ipv6 address 2001:db8:acad:1013::3/64
=> R3(config-if)# no shutdown
=> R3(config)# interface s6/1
=> R3(config-if)# ip address 10.1.3.130 255.255.255.128
=> R3(config-if)# ipv6 address fe80::3:3 link-local
=> R3(config-if)# ipv6 address 2001:db8:acad:1014::3/64
=> R3(config-if)# no shutdown
=> R3(config)# interface loopback 0
=> R3(config-if)# ip address 192.168.3.1 255.255.255.224
=> R3(config-if)# ipv6 address fe80::3:4 link-local
=> R3(config-if)# ipv6 address 2001:db8:acad:3000::1/64
=> R3(config-if)# no shutdown
=> R3(config)# interface loopback 1
=> R3(config-if)# ip address 192.168.3.65 255.255.255.192
=> R3(config-if)# ipv6 address fe80::3:5 link-local
=> R3(config-if)# ipv6 address 2001:db8:acad:3001::1/64
=> R3(config-if)# no shutdown

set the clock on each router to UTC time
 save the running configuration to startup-config

Part 2 : configure and varify multi-protocol BGP on all routers

Step 1: On R1, create the core BGP configuration.

#Enter BGP configuration mode from global configuration mode, specifying AS 6500. 
=> R1(config)# router bgp 6500
#Configure the BGP router-id for R1. 
=> R1(config-router)# bgp router-id 1.1.1.1

#Disable the default IPv4 unicast address family behavior.
=> R1(config-router)# no bgp default ipv4-unicast
#Based on the topology diagram, configure all the designated neighbors for R1.
=> R1(config-router)# neighbor 10.1.2.2 remote-as 500
=> R1(config-router)# neighbor 10.1.3.3 remote-as 300
=> R1(config-router)# neighbor 10.1.3.130 remote-as 300
=> R1(config-router)# neighbor 2001:db8:acad:1012::2 remote-as 500 
=> R1(config-router)# neighbor 2001:db8:acad:1013::3 remote-as 300 
=> R1(config-router)# neighbor 2001:db8:acad:1014::3 remote-as 300

Step 2: On R1, configure the IPv4 unicast address family.
Enter the IPv4 unicast address family configuration mode. 
=> R1(config-router)# address-family ipv4 unicast

=> R1(config-router-af)# network 192.168.1.0 mask 255.255.255.224
=> R1(config-router-af)# network 192.168.1.64 mask 255.255.255.192
=> R1(config-router-af)# no neighbor 2001:db8:acad:1012::2 activate 
=> R1(config-router-af)# no neighbor 2001:db8:acad:1013::3 activate 
=> R1(config-router-af)# no neighbor 2001:db8:acad:1014::3 activate 
=> R1(config-router-af)# neighbor 10.1.2.2 activate
=> R1(config-router-af)# neighbor 10.1.3.3 activate 
=> R1(config-router-af)# neighbor 10.1.3.130 activate

Step 3: On R1, configure the IPv6 unicast address family.
=> R1(config-router)# address-family ipv6 unicast
=> R1(config-router-af)# network 2001:db8:acad:1000::/64 
=> R1(config-router-af)# network 2001:db8:acad:1001::/64

=> R1(config-router-af)# neighbor 2001:db8:acad:1012::2 activate 
=> R1(config-router-af)# neighbor 2001:db8:acad:1013::3 activate 
=> R1(config-router-af)# neighbor 2001:db8:acad:1014::3 activate

Step 4: Configure MP-BGP on R2 and R3 as you did in the previous step. 

Step 5: Verify that MP-BGP is operational.
=> R1#show bgp ipv4 unicast summary
output:**

=> R1#show bgp ipv6 unicast summary
output:**


=> R1# show bgp ipv4 unicast | begin Network
output: ***

=> R1# show bgp ipv6 unicast | begin Network
output: ***

=> R1#show ipv6 route bgp
output:**


Part 3: Configure and Verify BGP Path Manipulation Settings on all Routers

Step 1: Configure ACL-based route filtering.
=> R1# show bgp ipv4 unicast | i 300
output:**

=> R3(config)# ip access-list extended ALLOWED_TO_R1
=> R3(config-ext-nacl)# permit ip 192.168.3.0 0.0.0.0 255.255.255.224
0.0.0.0
=> R3(config-ext-nacl)# permit ip 192.168.3.64 0.0.0.0 255.255.255.192
0.0.0.0
=> R3(config-ext-nacl)# exit
=> R3(config)# router bgp 300
=> R3(config-router)# address-family ipv4 unicast

=> R3(config-router-af)# neighbor 10.1.3.1 distribute-list ALLOWED_TO_R1 out
=> R3(config-router-af)# neighbor 10.1.3.129 distribute-list ALLOWED_TO_R1 out
=> R3(config-router-af)# end
=> R3# clear bgp ipv4 unicast 6500 out

=> R1# show bgp ipv4 unicast | i 300

Step 2: Configure prefix-list-based route filtering.

=> R1# show bgp ipv4 unicast | begin 192.168.3

=> R1(config)# ip prefix-list ALLOWED_FROM_R2 seq 5 permit 192.168.2.0/24 le 27
=> R1(config)# router bgp 6500
=> R1(config-router)# address-family ipv4 unicast

=> R1(config-router-af)# neighbor 10.1.2.2 prefix-list ALLOWED_FROM_R2 in
=> R1(config-router-af)# end
=> R1# clear bgp ipv4 unicast 500 in

=> R1# show bgp ipv4 unicast | i 500

Step 3: Configure an AS-PATH ACL to filter routes being advertised.

=> R2# show bgp ipv4 unicast | begin Network
=> R1(config)# ip as-path access-list 1 permit ^$

=> R1(config)# router bgp 6500
=> R1(config-router)# address-family ipv4 unicast
=> R1(config-router-af)# neighbor 10.1.2.2 filter-list 1 out
=> R1(config-router-af)# end

=> R1# clear bgp ipv4 unicast 500 out
=> R2# show bgp ipv4 unicast | i 6500


Step 4: Configure IPv6 prefix-list-based route filtering.

=> R1# show bgp ipv6 unicast neighbors 2001:db8:acad:1012::2 routes

=> R1(config)# ipv6 prefix-list IPV6_ALLOWED_FROM_R2 seq 5 permit 

=> R1(config)# router bgp 6500
=> R1(config-router)# address-family ipv6 unicast
=> R1(config-router-af)# neighbor 2001:db8:acad:1012::2 prefix-list 
=> IPV6_ALLOWED_FROM_R2 in
=> R1(config-router-af)# end

=> R1# clear bgp ipv6 unicast 500 in

=> R1# show bgp ipv6 unicast neighbors 2001:db8:acad:1012::2 routes


Step 5: Configure BGP path attribute manipulation to effect routing.

=> R1# show bgp ipv4 unicast 192.168.3.0
=> R1(config)# ip prefix-list PREFERRED_IPV4_PATH seq 5 permit 192.168.3.0/24 le 27

=> R1(config)# route-map USE_THIS_PATH_FOR_IPV4 permit 10 
=> R1(config)# match ip address prefix-list PERFERRED_IPV4_PATH 
=> R1(config)# set local-preference 250
=> R1(config)# router bgp 6500
=> R1(config-router)# address-family ipv4 unicast
=> R1(config-router-af)# neighbor 10.1.3.130 route-map USE_THIS_PATH_FOR_IPV4 in
=> R1(config-router-af)# end
=> R1# clear bgp ipv4 unicast 300 in
=> R1# show ip route bgp | begin Gateway

=> R1# show bgp ipv4 unicast | begin Network
Output:-***










###2. Implement BGP Communities
Part 1: Verify that MP-BGP is operational.

=> R1# show bgp ipv4 unicast summary
=> R1# show bgp ipv6 unicast summary

=> R1# show bgp ipv4 unicast

=> R1# show bgp ipv6 unicast
=> R1# show ip route bgp | begin Gateway

=> R1# show ipv6 route bgp


##Part 2: Configure and Verify BGP Communities on all Routers

#Step 1: Configure all routers to send community information.
=> R1(config)# ip bgp-community new-format

=> R1(config)# router bgp 6500
=> R1(config-router)# address-family ipv4 unicast
=> R1(config-router-af)# neighbor 10.1.2.2 send-community 
=> R1(config-router-af)# neighbor 10.1.3.3 send-community 
=> R1(config-router-af)# neighbor 10.1.3.130 send-community 
=> R1(config-router-af)# address-family ipv6 unicast
=> R1(config-router-af)# neighbor 2001:db8:acad:1012::2 send-community 
=> R1(config-router-af)# neighbor 2001:db8:acad:1013::3 send-community

=> R1(config-router-af)# neighbor 2001:db8:acad:1014::3 send-community 
=> R1(config-router-af)# exit

Step 2: Configure and verify the effect of the no-export community.

=> R2# show bgp ipv4 unicast 192.168.3.0/27
=> R3(config)# ip prefix-list LOCAL_NETWORK_COMMSET seq 5 permit 192.168.3.0/24 le 27 
=> R3(config)# ipv6 prefix-list LOCAL_6_NETWORK_COMMSET seq 5 permit 2001:db8:acad:3000::/64
=> R3(config)# ipv6 prefix-list LOCAL_6_NETWORK_COMMSET seq 10 permit 2001:db8:acad:3001::/64

=> R3(config)# route-map COMMSET permit 10
=> R3(config-route-map)# match ip address prefix-list LOCAL_NETWORK_COMMSET 
=> R3(config-route-map)# set community no-export additive
=> R3(config-route-map)# exit
=> R3(config)# route-map COMMSET permit 20
=> R3(config-route-map)# set community internet additive 
=> R3(config-route-map)# exit
=> R3(config)# route-map COMMSET_6 permit 10
=> R3(config-route-map)# match ipv6 address prefix-list LOCAL_6_NETWORK_COMMSET 
=> R3(config-route-map)# set community no-export additive
=> R3(config-route-map)# exit
=> R3(config)# route-map COMMSET_6 permit 20 
=> R3(config-route-map)# set community internet additive

=> R3(config)# router bgp 300
=> R3(config-router)# address-family ipv4 unicast
=> R3(config-router-af)# neighbor 10.1.3.1 route-map COMMSET out 
=> R3(config-router-af)# neighbor 10.1.3.129 route-map COMMSET out 
=> R3(config-router-af)# address-family ipv6 unicast
=> R3(config-router-af)# neighbor 2001:db8:acad:1013::1 route-map COMMSET_6 out 
=> R3(config-router-af)# neighbor 2001:db8:acad:1014::1 route-map COMMSET_6 out

=> R3# clear bgp ipv4 unicast 6500 out 
=> R3# clear bgp ipv6 unicast 6500 out 

=> R2# show bgp ipv4 unicast 192.168.3.0/27

=> R2# show bgp ipv6 unicast 2001:db8:acad:3000::/64

Step 3: Add private community information to routes advertised by R1.

=> R1(config)# route-map ADDCOMM permit 10
=> R1(config-route-map)# set community 650:400 additive 
=> R1(config-route-map)# exit
=> R1(config)# route-map ADDCOMM_6 permit 10 
=> R1(config-route-map)# set community 650:600 additive 
=> R1(config-route-map)# exit

=> R1(config)# router bgp 6500
=> R1(config-router)# address-family ipv4 unicast
=> R1(config-router-af)# neighbor 10.1.2.2 route-map ADDCOMM out 
=> R1(config-router-af)# address-family ipv6 unicast

=> R1(config-router-af)# neighbor 2001:db8:acad:1012::2 route-map ADDCOMM_6 out 
=> R1(config-router-af)# end

=> R1# clear bgp ipv4 unicast 500 out
=> R1# clear bgp ipv6 unicast 500 out 

=> R2# show bgp ipv4 unicast 192.168.1.0/27 | i Community

=> R2# show bgp ipv6 unicast 2001:db8:acad:1000::/64 | i Community

Step 4: Configure community-based route filtering and manipulation.
=> R3(config)# ip community-list 100 permit 650:400
=> R3(config)# ip community-list 101 permit 650:600

=> R3(config)# route-map COMMCHECK_4 deny 10 
=> R3(config-route-map)# match community 100
=> R3(config-route-map)# route-map COMMCHECK_4 permit 20 
=> R3(config-route-map)# exit
=> R3(config)# route-map COMMCHECK_6 permit 10 
=> R3(config-route-map)# match community 101

=> R3(config-route-map)# set local-preference 250
=> R3(config-route-map)# route-map COMMCHECK_6 permit 20 
=> R3(config-route-map)# exit
=> R3(config)# router bgp 300
=> R3(config-router)# address-family ipv4 unicast
=> R3(config-router-af)# neighbor 10.2.3.2 route-map COMMCHECK_4 in 
=> R3(config-router-af)# address-family ipv6 unicast
=> R3(config-router-af)# neighbor 2001:db8:acad:1023::2 route-map COMMCHECK_6 in 
=> R3(config-router-af)# end
=> R3# clear bgp ipv4 unicast 500 in 
=> R3# clear bgp ipv6 unicast 500 in

=> R3# show bgp ipv4 unicast 192.168.1.0/27 | i Community 
=> R3# show bgp ipv4 unicast

output: ***